Prompt

Tutorial (25-30 minutes): Please prepare a 10-minute training on a topic of your choice.  This training should be geared toward beginner level students with the idea of teaching them some aspect of working with an HPC system.  The goal will be to demonstrate your ability to effectively communicate beginner level topics to an end user with little-to-no HPC experience.  Please also be ready questions following your tutorial asked by our staff as if they were users in the room.


Topic ideas:

From “what is research computing”

	What is HPC
		Maybe too vague
		Differences between summit (super computing work) and storage

	How RC stores data
		Could be a good way to highlight visual learning
		Draw out nodes
		Talk about backups and persistence (talk about quelling frustrations if users know how their data will be kept and when it will not)

	High speed data transfer
		maybe too nuanced    

	How to access RC resources - ie GETTING THERE
		where you go when logging into rc (login nodes)
		what can you do with a login node? 
	
	HPC structure/RC structure
		different node types
			login nodes: where you login, 4 virtual nodes
				bad for: heavy comp, interactive jobs, long running procs
				good for: script/code editing, job submissions, checking jobs, looking at output 
			Compile nodes: where you compile code, install packages, etc
			Compute/batch nodes: where jobs are run via scheduler
				good for: heavy computation 

		Storage
			Home directories 
				- /home/$USER
				- not for computation, small quota 2gb, backed up
				- scripts, code, small important files/dirs

			Project space 
				- /projects/$USER
				- mid quota 250gb, large file storage, backed up
				- code/files/libs, software youre installing, mid-level size input files, share files,   	

			Scratch dirs 
				- /scratch/summit/$USER
				- large quota 10tb, files purged ~90 days
				- output from running jobs, large files/datasets, share files
				- no long term storage


				
		
			

